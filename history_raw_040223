    1  ll
    2  ll ~/Downloads/
    3  lsd -la ~/Downloads/
    4  sudo apt-get update
    5  sudo apt update
    6  sudo apt upgrade
    7  sudo apt autoremove
    8  echo "Instalando prerequisitos: Nerdfonts, lsd, git, curl"
    9  sudo apt install curl git
   10  echo "Descargar 'SourceCodePro (Sauce Code Pro Nerd Fonts)' de https://www.nerdfonts.com/font-downloads"
   11  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/SourceCodePro.zip -P ~/Downloads
   12  echo "Descargar 'Hack Nerd Font' de https://www.nerdfonts.com/font-downloads"
   13  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip -P ~/Downloads
   14  ll ~/Downloads
   15  rm ~/Downloads/*
   16  ll ~/Downloads
   17  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/SourceCodePro.zip -P ~/Downloads
   18  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/RobotoMono.zip -P ~/Downloads
   19  get https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/JetBrainsMono.zip -P ~/Downloads
   20  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/JetBrainsMono.zip -P ~/Downloads
   21  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/Hack.zip -P ~/Downloads
   22  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/Ubuntu.zip -P ~/Downloads
   23  ll ~/Downloads
   24  unzip ~/Downloads/Hack.zip -d ~/.fonts/Hack/
   25  ll
   26  mkdir ~/.fonts
   27  unzip ~/Downloads/Hack.zip -d ~/.fonts/Hack/
   28  unzip ~/Downloads/JetBrainsMono.zip -d ~/.fonts/JetBrainsMono/
   29  unzip ~/Downloads/RobotoMono.zip -d ~/.fonts/Roboto/
   30  unzip ~/Downloads/SourceCodePro.zip -d ~/.fonts/Roboto/SourceCodePro/
   31  unzip ~/Downloads/Ubuntu.zip -d ~/.fonts/Ubuntu/
   32  ll ~/.fonts/
   33  unzip ~/Downloads/Ubuntu.zip -d ~/.fonts/Ubuntu/
   34  unzip ~/Downloads/SourceCodePro.zip -d ~/.fonts/SourceCodePro/
   35  cd ~/.fonts/Roboto/
   36  ll
   37  rm -rf SourceCodePro/
   38  ll
   39  cd
   40  ll
   41  ll ~/.fonts/
   42  echo "Actualizando fuentes"
   43  fc-cache -fv
   44  fc-cache -l
   45  fc-cache list
   46  fc-list
   47  fc-list -h
   48  fc-list -h Mono
   49  fc-list -v Mono
   50  fc-list -f Mono
   51  echo "Instalando fuentes... Done!"
   52  echo "Instalando 'lsd' de https://github.com/Peltoche/lsd/releases/download/0.23.1/lsd_0.23.1_amd64.deb"
   53  echo "Instalando lsd... From source... Instalando RUST compiler (rustup)"
   54  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
   55  source "$HOME/.cargo/env"
   56  rustup override set stable
   57  rustup update stable
   58  echo "Instalando lsd... From source... Instalando RUST compiler (rustup)... Done!"
   59  echo "Instalando lsd... From source..."
   60  cargo install --git https://github.com/Peltoche/lsd.git --branch master
   61  cc
   62  sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl
   63  cc
   64  cc -v
   65  cargo install --git https://github.com/Peltoche/lsd.git --branch master
   66  cd ~/.config/
   67  ll
   68  echo "Instalando lsd... From source... Done!"
   69  echo "Configurando lsd... "
   70  ll
   71  mkdir lsd && cd lsd
   72  touch config.yaml
   73  nano config.yaml 
   74  mkdir themes && themes
   75  mkdir themes && themes/
   76  cd themes/
   77  nano frivas-theme.yaml
   78  nano default-theme.yaml
   79  nano terminal-colors.yaml
   80  cd
   81  echo "Configurando lsd... Done!"
   82  echo "Testing lsd... "
   83  lsd -la
   84  lsd -tree ~/Downloads/
   85  lsd -t ~/Downloads/
   86  echo "Testing 'lsd'... Done!"
   87  echo "Customizing terminal colors (manual)"
   88  echo "Customizing terminal colors (manual)... Nord and Nord (Black BG) Themes... Done!"
   89  echo "Configurando git"
   90  git config --global -e
   91  echo "Configurando git... Done!"
   92  echo "Adding 'lsd' to bashrc... "
   93  nano .bashrc 
   94  source .bashrc
   95  ll
   96  lt ~/.config/lsd/
   97  echo "Adding 'lsd' to bashrc... Done!"
   98  echo "Instalando pyenv, from blog post 'https://k0nze.dev/posts/install-pyenv-venv-vscode/'"
   99  apt search openssl | grep python
  100  git clone https://github.com/pyenv/pyenv.git ~/.pyenv
  101  echo "Optionally, try to compile a dynamic Bash extension to speed up Pyenv. Don't worry if it fails; Pyenv will still work normally:"
  102  cd ~/.pyenv && src/configure && make -C src
  103  ll
  104  gst
  105  git status
  106  cd ..
  107  ll
  108  echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
  109  echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
  110  echo 'eval "$(pyenv init -)"' >> ~/.bashrc
  111  echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.profile
  112  echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.profile
  113  echo 'eval "$(pyenv init -)"' >> ~/.profile
  114  echo $BASH_ENV
  115  exec "$SHELL"
  116  pyenv -V
  117  pyenv --version
  118  pyenv list
  119  pyenv versions
  120  pyenv install -l
  121  echo "Probando pyenv e instalando otras versiones de Python"
  122  pyenv install 3.10.9
  123  pyenv install 3.11.1
  124  pyenv install 2.7.18
  125  mkdir -p ~/Projects/Python/test
  126  cd ~/Projects/Python/test
  127  python -V
  128  python2 -V
  129  python3 -V
  130  pyenv local 3.11.1
  131  python
  132  python -V
  133  pyenv init
  134  nano ~/.profile 
  135  nano ~/.bashrc 
  136  python -V
  137  ll
  138  python -m venv .venv
  139  rm .python-version 
  140  ll
  141  python -V
  142  source .venv/bin/activate
  143  python -V
  144  deactivate
  145  cd
  146  echo "Probando pyenv e instalando otras versiones de Python... Done!"
  147  echo "Adding aliases."
  148  touch .bash_aliases
  149  nano .bash_aliases 
  150  exec "$SHELL"
  151  xrst
  152  termrst
  153  xtrst
  154  trmrst
  155  gst
  156  nano .bash_aliases 
  157  exec '$SHELL'
  158  exec "$SHELL"
  159  nano .bash_aliases 
  160  exec "$SHELL"
  161  trmrst 
  162  echo "Adding aliases... Done!"
  163  echo "$SHELL"
  164  echo "Instalando Alacritty..."
  165  echo "Instalando Alacritty... Prerequisitos... "
  166  g clone https://github.com/alacritty/alacritty.git
  167  cd alacritty/
  168  echo "Instalando Alacritty... Prerequisitos... Dependences (if need it)..."
  169  sudo apt-get install cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev
  170  echo "Instalando Alacritty... Prerequisitos... Dependences... Done!"
  171  cho "Instalando Alacritty... Building..."
  172  echo "Instalando Alacritty... Building..."
  173  cargo build --release
  174  echo "Instalando Alacritty... Post build..."
  175  infocmp alacritty
  176  sudo tic -xe alacritty,alacritty-direct extra/alacritty.info
  177  infocmp alacritty
  178  echo "Instalando Alacritty... Post build... Done!"
  179  echo "Instalando Alacritty... Desktop Entry..."
  180  sudo cp target/release/alacritty /usr/local/bin # or anywhere else in $PATH
  181  ll extra/logo/
  182  sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
  183  sudo desktop-file-install extra/linux/Alacritty.desktop
  184  sudo update-desktop-database
  185  echo "Instalando Alacritty... Desktop Entry... Done!"
  186  echo "Instalando Alacritty... Manual entry..."
  187  sudo mkdir -p /usr/local/share/man/man1
  188  gzip -c extra/alacritty.man | sudo tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null
  189  gzip -c extra/alacritty-msg.man | sudo tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null
  190  echo "Instalando Alacritty... Manual entry... Done!"
  191  echo "Instalando Alacritty... Shell completions..."
  192  mkdir -p ~/.bash_completion.d
  193  cp extra/completions/alacritty.bash ~/.bash_completion.d/alacritty
  194  echo "source ~/.bash_completion.d/alacritty.bash" >> ~/.bashrc
  195  echo "Instalando Alacritty... Shell completions... Done!"
  196  echo "Instalando Alacritty... Verifying installation..."
  197  nano ~/.bashrc
  198  trmrst 
  199  ll
  200  echo "Instalando Alacritty... Shell completions... Done!"
  201  echo "Instalando Alacritty... Verifying installation... Done!"
  202  echo "Configurating Alacritty... "
  203  cd ~/.config/
  204  mkdir alacritty
  205  cd alacritty/
  206  nano alacritty.yml
  207  echo "Configurating Alacritty... Testing..."
  208  echo "Configurating Alacritty... Testing... Done!"
  209  echo "Copying scripts and PS! generation..."
  210  cd
  211  ll
  212  cd ~/Downloads/
  213  g clone https://github.com/rivascf/dotfiles.git
  214  ll dotfiles/
  215  cd 
  216  mv -v ~/Downloads/dotfiles/gitbash/* ~/.config/
  217  ll ~/.config/
  218  cd ~/.config/
  219  mkdir gitbash
  220  mv git-completition.bash ./gitbash/
  221  mv git-prompt.sh ./gitbash/
  222  ll
  223  cd
  224  mv ~/Downloads/dotfiles/rosmgmt/ ~/.config/
  225  mv ~/Downloads/dotfiles/utilities/ ~/.config/
  226  ll ~/.config/
  227  nano ~/.bashrc 
  228  trmrst 
  229  cd ~/Projects/Python/test/
  230  g init
  231  source .venv/bin/activate
  232  gst
  233  echo ".venv/" >> .gitignore
  234  gst
  235  deactivate
  236  cd
  237  echo "Copying scripts and PS! generation... Done!"
  238  echo "Installing Node.js and npm using NVM (Node Version Manager)..."
  239  echo "extracted from: https://linuxize.com/post/how-to-install-node-js-on-ubuntu-22-04/#installing-nodejs-and-npm-using-nvm, https://github.com/nvm-sh/nvm#installing-and-updating"
  240  wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
  241  trmrst 
  242  echo "Installing Node.js and npm using NVM (Node Version Manager)... Testing..."
  243  nvm -V
  244  nvm list-remote
  245  nvm list --lts
  246  nvm install --lts
  247  node -V
  248  node -v
  249  nvm install v16.19.0
  250  pip -V
  251  pip3 -V
  252  python3 -V
  253  pip -V
  254  echo "Installing Node.js and npm using NVM (Node Version Manager)... Testing... Done!"
  255  echo "Installing Node.js and npm using NVM (Node Version Manager)... Done!"
  256  nano ~/.bashrc 
  257  echo "Installing Nvim (Neovim)... Methode 1 from deb packages."
  258  wget https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.deb -P ~/Downloads/
  259  cd ~/Downloads/
  260  sudo apt install ./nvim-linux64.deb 
  261  echo "Installing Nvim (Neovim)... Methode 1 from deb packages... CheckingHealth and installing extras"
  262  nvim
  263  python3 -V
  264  node -v
  265  nvim
  266  sudo apt-get install software-properties-common python-software-properties
  267  sudo apt-get install python-dev python-pip python3-dev python3-pip
  268  sudo apt-get install python-dev python3-dev python3-pip
  269  pip3 -V
  270  pip3 list pyvim
  271  pip3 install pynvim
  272  pip3 install pip --upgrade
  273  nvim
  274  npm install -g neovim
  275  npm install -g npm@9.2.0
  276  nvim
  277  nvim ~/.bash_aliases 
  278  nvim
  279  vim
  280  mkdir -p ~/.config/nvim
  281  vim ~/.config/nvim/init.lua
  282  pyenv virtualenvs
  283  echo "Setting up pyenv for neovim 'correctly' intent 1 from 'https://vi.stackexchange.com/questions/26752/how-to-let-vim-work-with-pyenv' using python 3.10 venv"
  284  ~/.pyenv/versions/3.10.9/bin/python3 -m venv ~/.venv
  285  ~/.venv/bin/python3 -m pip install --upgrade pip
  286  ~/.venv/bin/python3 -m pip install neovim pynvim
  287  ll
  288  let g:python3_host_prog=$HOME.'/.venv/bin/python3'
  289  nvim  ~/.config/nvim/init.lua 
  290  echo "Setting up pyenv for neovim 'correctly' intent 1 from 'https://vi.stackexchange.com/questions/26752/how-to-let-vim-work-with-pyenv' using python 3.10 venv... Done!"
  291  echo "Installing GO (just for fun)..."
  292  wget https://go.dev/dl/go1.19.4.linux-amd64.tar.gz -P ~/Downloads
  293  curl -sL https://golang.org/dl/ | grep -A 5 -w "go1.19.4.linux-amd64.tar.gz"
  294  cd ~/Down
  295  cd ~/Downloads/
  296  echo "c9c08f783325c4cf840a94333159cc937f05f75d36a8b307951d5bd959cf2ab8 *go1.19.4.linux-amd64.tar.gz" | shasum -a 256 --check
  297  tar -xf go1.19.4.linux-amd64.tar.gz 
  298  sudo chown -R root:root ./go
  299  ll
  300  sudo mv -v go /usr/local
  301  ll
  302  cd ..
  303  vim .profile 
  304  echo $GOPATH
  305  cat .profile
  306  echo $PATH
  307  vim .bashrc 
  308  trmrst 
  309  echo $PATH
  310  echo $GOPATH
  311  go version
  312  echo "Installing GO (just for fun)... Done!"
  313  nvim  ~/.config/nvim/init.lua 
  314  echo "Installing Nvim (Neovim)... Methode 1 from deb packages... CheckingHealth and installing extras... Done!"
  315  echo "Installing Nvim (Neovim)... Methode 1 from deb packages... Basic configuration... Done!"
  316  echo "Installing Nvim (Neovim)... Methode 1 from deb packages... Done!"
  317  vim ~/.config/alacritty/alacritty.yml 
  318  nvim
  319  vim ~/.config/alacritty/alacritty.yml 
  320  cd Projects/
  321  cd ..
  322  lt Projects/
  323  rm -rf Projects/
  324  ll
  325  mkdir -p ~/dev/python
  326  mkdir -p ~/dev/test00
  327  vim ~/.config/alacritty/alacritty.yml 
  328  echo -e "\e]2;New Title\x9c"
  329  echo -e "\e]2;$PATH\x9c"
  330  echo -e "\e]2;Titulo\x9c"
  331  ll
  332  export WINIT_UNIX_BACKEND=x11
  333  vim ~/.config/alacritty/alacritty.yml 
  334  export WINIT_UNIX_BACKEND=x11
  335  vim ~/.config/alacritty/alacritty.yml 
  336  lt ~/.config/nvim/
  337  vim ~/.config/nvim/init.
  338  vim ~/.config/nvim/init.lua 
  339  ll
  340  vim ~/.config/nvim/init
  341  cd ~/.config/nvim/
  342  ll
  343  rm -rf lua/
  344  rm -rf plugin/
  345  rm init.old 
  346  ll
  347  cd ~/.local/share/
  348  ll
  349  cd nvim/
  350  ll
  351  rm -rf mason/
  352  rm -rf site/
  353  rm rplugin.vim 
  354  rm telescope_history 
  355  cd
  356  ll
  357  ll ~/.venv/bin/
  358  cd dev/python/
  359  python -v
  360  python -V
  361  python3 -V
  362  pyenv local 3.11.0
  363  pyenv local 3.11.1
  364  python -V
  365  startvenv 
  366  initvenv 
  367  ll
  368  rm .python-version 
  369  startvenv 
  370  vim test_ros.py
  371  deactivate
  372  ll
  373  mkdir test01
  374  mv .venv/ ./test
  375  ll
  376  mv test_ros.py ./test
  377  ll
  378  cd test
  379  ll
  380  cd ..
  381  ll
  382  rm -rf test
  383  rm -rf test01/
  384  ll
  385  mkdir test01
  386  cd test01/
  387  pyenv local python 3.10.9 
  388  pyenv local 3.10.9 
  389  pytnon -V
  390  python -V
  391  initvenv 
  392  ll
  393  rm .python-version 
  394  python -V
  395  startvenv 
  396  g init
  397  vim readme.md
  398  echo ".venv/" >> .gitignore
  399  ll
  400  gst
  401  g add .
  402  g commit -m "Initial commit"
  403  git -M main
  404  git branch -m main
  405  gst
  406  vim readme.md 
  407  g commit -m "Updated readme file"
  408  g add .
  409  g commit -m "Updated readme file"
  410  vim readme.md 
  411  g add .
  412  g commit -m "Updated readme file"
  413  vim test_prog.py
  414  gst
  415  g add .
  416  g commit -m "Added test_prog.py"
  417  vim test_prog.py
  418  g add .
  419  g commit -m "Updated test_prog.py"
  420  g lg
  421  vim test_prog.py
  422  g add .
  423  g commit -m "Updated test_prog.py"
  424  vim test_prog.py
  425  g add .
  426  g commit -m "Updated test_prog.py"
  427  g lg
  428  g lg02
  429  g lg2
  430  g lg3
  431  cd ~/.config/nvim/
  432  cd ..
  433  ll
  434  cd nvim/
  435  ll
  436  history | grep fc
  437  fc-list -f Mono
  438  fc-list
  439  fc-list | grep "SauceCodePro Nerd Font Mono"
  440  fc-list | grep "Roboto Mono"
  441  fc-list | grep "RobotoMono"
  442  git clone --depth 1 https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim
  443  mkdir lua
  444  vim lua/plugins.lua
  445  cd ..
  446  cd nvim/
  447  vim init.lua 
  448  vim lua/plugins.lua
  449  vim lua/settings.lua
  450  cd lua/
  451  ll
  452  cd ..
  453  vim init.lua 
  454  vim lua/settings.lua
  455  vim lua/plugins.lua
  456  vim lua/settings.lua
  457  mkdir -p lua/config
  458  vim lua/config/onedark.lua
  459  vim init.lua 
  460  vim lua/config/onedark.lua
  461  vim init.lua 
  462  vim lua/settings.lua
  463  vim init.lua 
  464  cd lua/
  465  ll
  466  cd ..
  467  vim lua/config/highlight.lua
  468  vim lua/config/lualine.lua
  469  vim init.lua 
  470  vim lua/keymaps.lua
  471  vim init.lua 
  472  vim lua/config/comment.lua
  473  vim init.lua 
  474  vim lua/config/blank-line.lua
  475  vim init.lua 
  476  vim lua/config/onedark.lua
  477  vim lua/config/blank-line.lua
  478  vim lua/config/onedark.lua
  479  vim lua/config/blank-line.lua
  480  vim lua/config/onedark.lua
  481  vim lua/config/blank-line.lua
  482  vim lua/config/gitsigns.lua
  483  vim init.lua 
  484  vim lua/config/telescope.lua
  485  vim init.lua 
  486  vim lua/config/telescope.lua
  487  vim init.lua 
  488  vim lua/keymaps.lua
  489  vim lua/config/treesitter.lua
  490  vim init.lua 
  491  vim lua/keymaps.lua
  492  vim lua/config/lspsettings.lua
  493  vim init.lua 
  494  vim lua/config/lspsettings.lua
  495  vim init.lua 
  496  vim lua/config/treesitter.lua 
  497  vim lua/plugins.lua 
  498  vim lua/config/mason.lua 
  499  vim lua/config/lspsettings.lua
  500  ll
  501  vim ini.lua
  502  ll
  503  mv init.lua init.old
  504  ll
  505  mv ini.lua init.lua
  506  ll
  507  vim init.lua
  508  history | grep ripgrep
  509  echo "Installing ripgrep for 'Treesitter'"
  510  cd ~/Downloads/
  511  git clone https://github.com/BurntSushi/ripgrep
  512  cd ripgrep/
  513  cargo build --release
  514  ./target/release/rg --version 0.1.3
  515  rg
  516  ./target/release/rg --version
  517  ll
  518  ll target/
  519  ll target/release/
  520  cargo install --release
  521  cargo install --help
  522  cargo list
  523  cargo install --list
  524  cd ..
  525  rm -rf ripgrep/
  526  ll
  527  cd 
  528  echo "Installing ripgrep for 'Treesitter'... Failed"
  529  echo "Installing ripgrep for 'Treesitter'... Methode 2, from https://lindevs.com/install-ripgrep-on-ubuntu"
  530  RIPGREP_VERSION=$(curl -s "https://api.github.com/repos/BurntSushi/ripgrep/releases/latest" | grep -Po '"tag_name": "\K[0-9.]+')
  531  echo $RIPGREP_VERSION
  532  cd Downloads/
  533  curl -Lo ripgrep.deb "https://github.com/BurntSushi/ripgrep/releases/latest/download/ripgrep_${RIPGREP_VERSION}_amd64.deb"
  534  sudo apt install -y ./ripgrep.deb
  535  rg --version
  536  echo "Installing ripgrep for 'Treesitter'... Methode 2, testing..."
  537  sudo rg localhost /etc
  538  echo "Installing ripgrep for 'Treesitter'... Methode 2, testing... Ok!"
  539  echo "Installing ripgrep for 'Treesitter'... Done!"
  540  cd ~/.config/nvim/
  541  vim init.lua 
  542  ll
  543  cd dev
  544  ll
  545  cd test00/
  546  ll
  547  cd ..
  548  cd python/
  549  ll
  550  cd test01/
  551  ll
  552  vim test_prog.py 
  553  gst
  554  g add .
  555  g commit -m "Updated test_prg.py"
  556  g lg
  557  cd ..
  558  ll
  559  ll test00/
  560  rm test00/
  561  cd python/
  562  ll
  563  vim
  564  vim test01/test01.py
  565  cd ~/.config/nvim/
  566  lt
  567  vim init.lua 
  568  ll
  569  cd ~/.config/nvim/
  570  vim init.lua 
  571  cd ~/.config/nvim/
  572  vim init.lua 
  573  cd dev/python/test01/
  574  ll
  575  vim readme.md 
  576  cd ~/.config/nvim/
  577  vim init.lua 
  578  cd ~/dev/python/test01/
  579  vim readme.md 
  580  gst
  581  g add .
  582  g commit -m "Added test01.py updated readme.md"
  583  vim readme.md 
  584  vim ~/.config/alacritty/alacritty.yml 
  585  vim readme.md 
  586  cd ~/dev/python/test01/
  587  ll
  588  vim test_prog.py 
  589  vim test02.py 
  590  cd ~/.config/nvim/
  591  vim init.lua 
  592  cd dev/python/test01/
  593  vim readme.md 
  594  cd ..
  595  mkdir test_cpp
  596  cd test_cpp/
  597  mkdir include
  598  vim program.cpp
  599  gcc program.cpp 
  600  vim program.cpp
  601  gcc program.cpp 
  602  vim program.cpp
  603  gcc program.cpp 
  604  vim .bashrc 
  605  vim ~/.config/rosmgmt/ros_mgmt.sh 
  606  cd ~/.config/nvim/
  607  vim init.lua 
  608  history | tail -10
  609  sudo apt-get update -y
  610  sudo apt update -y
  611  sudo apt upgrade -y
  612  cd ~/.config/nvim/
  613  vim init.lua 
  614  cd ~/.config/nvim/
  615  vim init.lua 
  616  cd ~/.config/nvim/
  617  vim init.lua 
  618  echo "For telescope warning 'fd: no installed...'"
  619  sudo apt install fd-find
  620  fd -V
  621  fd 
  622  ln -s $(which fdfind) ~/.local/bin/fd
  623  echo $PATH
  624  fd -V
  625  fd
  626  fd app
  627  fd --hidden sample
  628  echo "For telescope warning 'fd: no installed...' done! (From 'https://github.com/sharkdp/fd')"
  629  cd ~/.config/nvim/
  630  vim init.lua 
  631  history | grep "nvim"
  632  history | grep "neovim"
  633  echo "Neovim config done (so far)! Test and add/modify"
  634  history | tail -10
  635  cd
  636  lt dev/
  637  rm -rf ~/dev/test00/
  638  rm -rf ~/dev/test_cpp/
  639  lt dev/
  640  rm -rf ~/dev/python/test01/
  641  lt dev/
  642  cd dev/python/
  643  mkdir opencv_t1
  644  cd opencv_t1/
  645  python3
  646  python3 -V
  647  pyenv local 3.10.9 
  648  python -V
  649  initvenv 
  650  lt
  651  ll
  652  rm .python-version 
  653  python -V
  654  startvenv 
  655  pip3 -V
  656  pip -V
  657  píp install opencv
  658  pip install opencv
  659  pip search opencv
  660  pip search numpy
  661  pip install numpy
  662  pip install opencv-python
  663  ll
  664  vim testcv201.py
  665  vim ~/.config/nvim/init.lua 
  666  vim testcv201.py
  667  pip install imutils
  668  vim testcv201.py
  669  yarn --version
  670  cd ~/.config/nvim/
  671  vim init.lua 
  672  sudo apt-get update -y
  673  sudo apt update -y
  674  sudo apt upgrade -y
  675  yarn -V
  676  npm -V
  677  npm -v
  678  sudo curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
  679  vim ~/.bashrc 
  680  source ~/.bashrc 
  681  yarn --version
  682  cd ~/.config/nvim/
  683  vim init.lua 
  684  gcc -dumpmachine
  685  nvim --version
  686  npm install -g tree-sitter-cli
  687  echo "Installing TMux for evaluation, from https://github.com/tmux/tmux/wiki..."
  688  sudo apt-get update
  689  sudo apt update
  690  sudo apt upgrade
  691  sudo apt install tmux
  692  tmux
  693  cd ~/.config/nvim/
  694  vim init.lua 
  695  exit
  696  vim ~/.bashrc
  697  tmux
  698  ll
  699  ll
  700  echo $PS1
  701  ll
  702  cd .config/
  703  ll
  704  cd ..
  705  ll
  706  cd .local/
  707  ll
  708  ll share/
  709  ll
  710  cd ..
  711  cd .
  712  cd ..
  713  find tmux
  714  find -r tmux
  715  find -a tmux
  716  find -a */tmux/
  717  tmux ls
  718  tmux new -nmytopwindow top
  719  cd ..
  720  cd
  721  ll
  722  vim .bashrc 
  723  echo $TMUX
  724  echo "Installing TMux for evaluation... Done!"
  725  tmux
  726  vim ~/.bashrc
  727  tmux
  728  echo "Installing TMux for evaluation... Testing... Ok!"
  729  history | tail -10
  730  cd ~/Documents/
  731  mkdir dotfiles
  732  cd dotfiles/
  733  ll
  734  g init
  735  touch .gitignore
  736  echo "# Dotfiles" >> Readme.md
  737  g add .
  738  g commit -m "Initial commit"
  739  g lg
  740  gst
  741  history >> history_raw_160123
  742  ll
  743  mkdir -p ./config/nvim
  744  ll
  745  cp -r ~/.config/nvim/* ./config/nvim/
  746  lt config/nvim/
  747  rm -rf config/nvim/plugin/
  748  lt config/nvim/
  749  g add history_raw_160123 
  750  g commit -m "Added history_raw_160123 file"
  751  gst
  752  g add config/
  753  gst
  754  g commit -m "Added config folder with nvim configuration"
  755  gst
  756  g lg
  757  echo $TMUX
  758  echo $TERM
  759  echo $TERM
  760  echo $TMUX
  761  tmux
  762  echo $TMUX
  763  tmux
  764  vim ~/.bashrc
  765  tmux
  766  tmux
  767  tmus
  768  tmux
  769  vim ~/.bashrc
  770  nano ~/.bashrc
  771  vim ~/.bashrc
  772  tmux
  773  lt ~/Documents/dotfiles/
  774  cp .bashrc ~/Documents/dotfiles/bashrc
  775  cp .bash_aliases ~/Documents/dotfiles/bash_aliases
  776  lt ~/Documents/dotfiles/
  777  ls ~/Downloads/
  778  lt ~/Downloads/dotfiles/
  779  cd ~/Downloads/
  780  ll
  781  rm *.zip
  782  rm *.deb
  783  rm *.gz
  784  ll
  785  cd ..
  786  ll
  787  lt alacritty/
  788  rm -rf alacritty/
  789  ll
  790  cd Games/
  791  ll
  792  cd SummertimeSaga-0-20-16-pc/
  793  ll
  794  . SummertimeSaga.sh
  795  cd Games/SummertimeSaga-0-20-16-pc/
  796  vim SummertimeSaga.sh 
  797  ll
  798  ll ~/
  799  ll
  800  python SummertimeSaga.py 
  801  . SummertimeSaga.sh 
  802  cd ~/Games/SummertimeSaga-0-20-16-pc/
  803  vim SummertimeSaga.py 
  804  vim SummertimeSaga.sh
  805  sudo ./SummertimeSaga.sh 
  806  source /opt/ros/galactic/setup.bash
  807  ros2 topic list 
  808  ros2 topic info /chatter 
  809  source /opt/ros/galactic/setup.bash
  810  tnux
  811  tmux
  812  ros2 run demo_nodes_cpp talker
  813  echo "Installing ROS2 Humble... Just for fun..."
  814  locale
  815  sudo apt-get update -y
  816  sudo apt update -y
  817  sudo apt upgrade -y
  818  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
  819  locale
  820  sudo locale-gen en_US en_US.UTF-8
  821  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
  822  locale
  823  sudo apt install software-properties-common
  824  sudo add-apt-repository universe
  825  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
  826  sudo apt update -y
  827  sudo apt upgrade -y
  828  echo "Installing ROS2 Galactic... It's not possible intsall Humble due OS requirements..."
  829  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
  830  ll /usr/share/keyrings/
  831  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
  832  echo $UBUNTU_CODENAME
  833  sudo apt update -y
  834  sudo apt upgrade -y
  835  sudo apt install ros-galactic-desktop
  836  sudo apt install ros-dev-tools
  837  source /opt/ros/galactic/setup.bash
  838  ros2 run demo_nodes_py listener
  839  echo "Installing ROS2 Galactic... Done!"
  840  printenv | grep -i ROS
  841  vim ~/.config/rosmgmt/ros2_galactic_conf.bash 
  842  echo "Installing ROS2 Galactic... Config... Ok!"
  843  history >> ~/Documents/dotfiles/history_raw_200123 
  844  cd ~/Games/SummertimeSaga-0-20-16-pc/
  845  sudo ./SummertimeSaga.sh 
  846  tail .bash_history -n10
  847  tail .bash_history -n20
  848  vim .bash_history
  849  tail .bash_history -n20
  850  history | tail -10
  851  vim .bash_history
  852  cd ~/Games/SummertimeSaga-0-20-16-pc/
  853  sudo ./SummertimeSaga.sh 
  854  sudo apt-get update -y
  855  sudo apt update -y
  856  sudo apt upgrade -y
  857  sudo apt autoremove
  858  pyenv shell 3.11.1
  859  vim ~/.config/alacritty/alacritty.yml 
  860  exit
  861  echo "Installing VsCode from 'https://code.visualstudio.com/download'"
  862  history | grep .deb
  863  sudo apt install ./Downloads/code_1.75.0-1675266613_amd64.deb 
  864  cd dev/
  865  ll
  866  cd python/
  867  ll
  868  code .
  869  echo "Installing VsCode from 'https://code.visualstudio.com/download'... Done!"
  870  echo "Installing configuring and adding plugins to vscode... "
  871  code .
  872  cd opencv_t1/
  873  code .
  874  source /home/frivas/dev/python/opencv_t1/.venv/bin/activate
  875  g init code
  876  g init
  877  echo "#OpenCV T1 Readme file" >> Readme.md
  878  echo ".venv/" >> .gitignore
  879  echo ".vscode/" >> .gitignore
  880  g add Readme.md .gitignore 
  881  g commit -m "Initial commit" 
  882  gst
  883  g add .
  884  g commit -m "Added testcv291.py"
  885  gst
  886  echo "Installing configuring and adding plugins to vscode... Done!"
  887  source /home/frivas/dev/python/openai_t1/.venv/bin/activate
  893  source /home/frivas/dev/python/openai_t1/.venv/bin/activate
  894  pip -V
  895  pip install openai
  896  source /home/frivas/dev/python/openai_t1/.venv/bin/activate
  900  cd dev/python/
  901  ll
  902  rm -rf .vscode/
  903  ll
  904  mkdir openai_t1
  905  cd open
  906  cd openai_t1/
  907  history | grep venv
  908  pyenv versions
  909  history | grep pyenv
  910  pyenv local 3.10.9
  911  python -m venv .venv
  912  ll
  913  rm .python-version 
  914  startvenv 
  915  deactivate
  916  ll
  917  code .
  918  history | tail -10
  919  lt ~/Documents/dotfiles/
  920  history > ~/Documents/dotfiles/history_raw_040223
  921  lt ~/Documents/dotfiles/
  922  cp .bashrc ~/Documents/dotfiles/bashrc 
  923  cp .bash_aliases ~/Documents/dotfiles/bash_aliases 
  924  cp ~/.config/nvim/init.lua ~/Documents/dotfiles/config/nvim/init.lua 
  925  lt ~/.config/
  926  cp -a ~/.config/lsd/. ~/Documents/dotfiles/config/
  927  lt ~/Documents/dotfiles/
  928  cp -a ~/.config/lsd/. ~/Documents/dotfiles/config/lsd
  929  cp -a ~/.config/rosmgmt/. ~/Documents/dotfiles/config/rosmgmt/
  930  cp -a ~/.config/gitbash/. ~/Documents/dotfiles/config/gitbash/
  931  cp -a ~/.config/utilities/. ~/Documents/dotfiles/config/utilities/
  932  lt ~/.config/
  933  lt -n1 ~/.config/
  934  lt -1 ~/.config/
  935  lt -n1 ~/.config/
  936  lsd --help
  937  lt -l ~/.config/
  938  lsd --help
  939  lt -d --depth 1 ~/.config/
  940  lt --depth 1 ~/.config/
  941  lt -d ~/.config/
  942  cp -a ~/.config/alacritty/. ~/Documents/dotfiles/config/alacritty/
  943  history > ~/Documents/dotfiles/history_raw_040223
