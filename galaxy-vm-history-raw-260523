  357  ll ~/.venv/bin/
  358  cd dev/python/
  359  python -v
  360  python -V
  361  python3 -V
  362  pyenv local 3.11.0
  363  pyenv local 3.11.1
  364  python -V
  365  startvenv 
  366  initvenv 
  367  ll
  368  rm .python-version 
  369  startvenv 
  370  vim test_ros.py
  371  deactivate
  372  ll
  373  mkdir test01
  374  mv .venv/ ./test
  375  ll
  376  mv test_ros.py ./test
  377  ll
  378  cd test
  379  ll
  380  cd ..
  381  ll
  382  rm -rf test
  383  rm -rf test01/
  384  ll
  385  mkdir test01
  386  cd test01/
  387  pyenv local python 3.10.9 
  388  pyenv local 3.10.9 
  389  pytnon -V
  390  python -V
  391  initvenv 
  392  ll
  393  rm .python-version 
  394  python -V
  395  startvenv 
  396  g init
  397  vim readme.md
  398  echo ".venv/" >> .gitignore
  399  ll
  400  gst
  401  g add .
  402  g commit -m "Initial commit"
  403  git -M main
  404  git branch -m main
  405  gst
  406  vim readme.md 
  407  g commit -m "Updated readme file"
  408  g add .
  409  g commit -m "Updated readme file"
  410  vim readme.md 
  411  g add .
  412  g commit -m "Updated readme file"
  413  vim test_prog.py
  414  gst
  415  g add .
  416  g commit -m "Added test_prog.py"
  417  vim test_prog.py
  418  g add .
  419  g commit -m "Updated test_prog.py"
  420  g lg
  421  vim test_prog.py
  422  g add .
  423  g commit -m "Updated test_prog.py"
  424  vim test_prog.py
  425  g add .
  426  g commit -m "Updated test_prog.py"
  427  g lg
  428  g lg02
  429  g lg2
  430  g lg3
  431  cd ~/.config/nvim/
  432  cd ..
  433  ll
  434  cd nvim/
  435  ll
  436  history | grep fc
  437  fc-list -f Mono
  438  fc-list
  439  fc-list | grep "SauceCodePro Nerd Font Mono"
  440  fc-list | grep "Roboto Mono"
  441  fc-list | grep "RobotoMono"
  442  git clone --depth 1 https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim
  443  mkdir lua
  444  vim lua/plugins.lua
  445  cd ..
  446  cd nvim/
  447  vim init.lua 
  448  vim lua/plugins.lua
  449  vim lua/settings.lua
  450  cd lua/
  451  ll
  452  cd ..
  453  vim init.lua 
  454  vim lua/settings.lua
  455  vim lua/plugins.lua
  456  vim lua/settings.lua
  457  mkdir -p lua/config
  458  vim lua/config/onedark.lua
  459  vim init.lua 
  460  vim lua/config/onedark.lua
  461  vim init.lua 
  462  vim lua/settings.lua
  463  vim init.lua 
  464  cd lua/
  465  ll
  466  cd ..
  467  vim lua/config/highlight.lua
  468  vim lua/config/lualine.lua
  469  vim init.lua 
  470  vim lua/keymaps.lua
  471  vim init.lua 
  472  vim lua/config/comment.lua
  473  vim init.lua 
  474  vim lua/config/blank-line.lua
  475  vim init.lua 
  476  vim lua/config/onedark.lua
  477  vim lua/config/blank-line.lua
  478  vim lua/config/onedark.lua
  479  vim lua/config/blank-line.lua
  480  vim lua/config/onedark.lua
  481  vim lua/config/blank-line.lua
  482  vim lua/config/gitsigns.lua
  483  vim init.lua 
  484  vim lua/config/telescope.lua
  485  vim init.lua 
  486  vim lua/config/telescope.lua
  487  vim init.lua 
  488  vim lua/keymaps.lua
  489  vim lua/config/treesitter.lua
  490  vim init.lua 
  491  vim lua/keymaps.lua
  492  vim lua/config/lspsettings.lua
  493  vim init.lua 
  494  vim lua/config/lspsettings.lua
  495  vim init.lua 
  496  vim lua/config/treesitter.lua 
  497  vim lua/plugins.lua 
  498  vim lua/config/mason.lua 
  499  vim lua/config/lspsettings.lua
  500  ll
  501  vim ini.lua
  502  ll
  503  mv init.lua init.old
  504  ll
  505  mv ini.lua init.lua
  506  ll
  507  vim init.lua
  508  history | grep ripgrep
  509  echo "Installing ripgrep for 'Treesitter'"
  510  cd ~/Downloads/
  511  git clone https://github.com/BurntSushi/ripgrep
  512  cd ripgrep/
  513  cargo build --release
  514  ./target/release/rg --version 0.1.3
  515  rg
  516  ./target/release/rg --version
  517  ll
  518  ll target/
  519  ll target/release/
  520  cargo install --release
  521  cargo install --help
  522  cargo list
  523  cargo install --list
  524  cd ..
  525  rm -rf ripgrep/
  526  ll
  527  cd 
  528  echo "Installing ripgrep for 'Treesitter'... Failed"
  529  echo "Installing ripgrep for 'Treesitter'... Methode 2, from https://lindevs.com/install-ripgrep-on-ubuntu"
  530  RIPGREP_VERSION=$(curl -s "https://api.github.com/repos/BurntSushi/ripgrep/releases/latest" | grep -Po '"tag_name": "\K[0-9.]+')
  531  echo $RIPGREP_VERSION
  532  cd Downloads/
  533  curl -Lo ripgrep.deb "https://github.com/BurntSushi/ripgrep/releases/latest/download/ripgrep_${RIPGREP_VERSION}_amd64.deb"
  534  sudo apt install -y ./ripgrep.deb
  535  rg --version
  536  echo "Installing ripgrep for 'Treesitter'... Methode 2, testing..."
  537  sudo rg localhost /etc
  538  echo "Installing ripgrep for 'Treesitter'... Methode 2, testing... Ok!"
  539  echo "Installing ripgrep for 'Treesitter'... Done!"
  540  cd ~/.config/nvim/
  541  vim init.lua 
  542  ll
  543  cd dev
  544  ll
  545  cd test00/
  546  ll
  547  cd ..
  548  cd python/
  549  ll
  550  cd test01/
  551  ll
  552  vim test_prog.py 
  553  gst
  554  g add .
  555  g commit -m "Updated test_prg.py"
  556  g lg
  557  cd ..
  558  ll
  559  ll test00/
  560  rm test00/
  561  cd python/
  562  ll
  563  vim
  564  vim test01/test01.py
  565  cd ~/.config/nvim/
  566  lt
  567  vim init.lua 
  568  ll
  569  cd ~/.config/nvim/
  570  vim init.lua 
  571  cd ~/.config/nvim/
  572  vim init.lua 
  573  cd dev/python/test01/
  574  ll
  575  vim readme.md 
  576  cd ~/.config/nvim/
  577  vim init.lua 
  578  cd ~/dev/python/test01/
  579  vim readme.md 
  580  gst
  581  g add .
  582  g commit -m "Added test01.py updated readme.md"
  583  vim readme.md 
  584  vim ~/.config/alacritty/alacritty.yml 
  585  vim readme.md 
  586  cd ~/dev/python/test01/
  587  ll
  588  vim test_prog.py 
  589  vim test02.py 
  590  cd ~/.config/nvim/
  591  vim init.lua 
  592  cd dev/python/test01/
  593  vim readme.md 
  594  cd ..
  595  mkdir test_cpp
  596  cd test_cpp/
  597  mkdir include
  598  vim program.cpp
  599  gcc program.cpp 
  600  vim program.cpp
  601  gcc program.cpp 
  602  vim program.cpp
  603  gcc program.cpp 
  604  vim .bashrc 
  605  vim ~/.config/rosmgmt/ros_mgmt.sh 
  606  cd ~/.config/nvim/
  607  vim init.lua 
  608  history | tail -10
  609  sudo apt-get update -y
  610  sudo apt update -y
  611  sudo apt upgrade -y
  612  cd ~/.config/nvim/
  613  vim init.lua 
  614  cd ~/.config/nvim/
  615  vim init.lua 
  616  cd ~/.config/nvim/
  617  vim init.lua 
  618  echo "For telescope warning 'fd: no installed...'"
  619  sudo apt install fd-find
  620  fd -V
  621  fd 
  622  ln -s $(which fdfind) ~/.local/bin/fd
  623  echo $PATH
  624  fd -V
  625  fd
  626  fd app
  627  fd --hidden sample
  628  echo "For telescope warning 'fd: no installed...' done! (From 'https://github.com/sharkdp/fd')"
  629  cd ~/.config/nvim/
  630  vim init.lua 
  631  history | grep "nvim"
  632  history | grep "neovim"
  633  echo "Neovim config done (so far)! Test and add/modify"
  634  history | tail -10
  635  cd
  636  lt dev/
  637  rm -rf ~/dev/test00/
  638  rm -rf ~/dev/test_cpp/
  639  lt dev/
  640  rm -rf ~/dev/python/test01/
  641  lt dev/
  642  cd dev/python/
  643  mkdir opencv_t1
  644  cd opencv_t1/
  645  python3
  646  python3 -V
  647  pyenv local 3.10.9 
  648  python -V
  649  initvenv 
  650  lt
  651  ll
  652  rm .python-version 
  653  python -V
  654  startvenv 
  655  pip3 -V
  656  pip -V
  657  pÃ­p install opencv
  658  pip install opencv
  659  pip search opencv
  660  pip search numpy
  661  pip install numpy
  662  pip install opencv-python
  663  ll
  664  vim testcv201.py
  665  vim ~/.config/nvim/init.lua 
  666  vim testcv201.py
  667  pip install imutils
  668  vim testcv201.py
  669  yarn --version
  670  cd ~/.config/nvim/
  671  vim init.lua 
  672  sudo apt-get update -y
  673  sudo apt update -y
  674  sudo apt upgrade -y
  675  yarn -V
  676  npm -V
  677  npm -v
  678  sudo curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
  679  vim ~/.bashrc 
  680  source ~/.bashrc 
  681  yarn --version
  682  cd ~/.config/nvim/
  683  vim init.lua 
  684  gcc -dumpmachine
  685  nvim --version
  686  npm install -g tree-sitter-cli
  687  echo "Installing TMux for evaluation, from https://github.com/tmux/tmux/wiki..."
  688  sudo apt-get update
  689  sudo apt update
  690  sudo apt upgrade
  691  sudo apt install tmux
  692  tmux
  693  cd ~/.config/nvim/
  694  vim init.lua 
  695  exit
  696  vim ~/.bashrc
  697  tmux
  698  ll
  699  ll
  700  echo $PS1
  701  ll
  702  cd .config/
  703  ll
  704  cd ..
  705  ll
  706  cd .local/
  707  ll
  708  ll share/
  709  ll
  710  cd ..
  711  cd .
  712  cd ..
  713  find tmux
  714  find -r tmux
  715  find -a tmux
  716  find -a */tmux/
  717  tmux ls
  718  tmux new -nmytopwindow top
  719  cd ..
  720  cd
  721  ll
  722  vim .bashrc 
  723  echo $TMUX
  724  echo "Installing TMux for evaluation... Done!"
  725  tmux
  726  vim ~/.bashrc
  727  tmux
  728  echo "Installing TMux for evaluation... Testing... Ok!"
  729  history | tail -10
  730  cd ~/Documents/
  731  mkdir dotfiles
  732  cd dotfiles/
  733  ll
  734  g init
  735  touch .gitignore
  736  echo "# Dotfiles" >> Readme.md
  737  g add .
  738  g commit -m "Initial commit"
  739  g lg
  740  gst
  741  history >> history_raw_160123
  742  ll
  743  mkdir -p ./config/nvim
  744  ll
  745  cp -r ~/.config/nvim/* ./config/nvim/
  746  lt config/nvim/
  747  rm -rf config/nvim/plugin/
  748  lt config/nvim/
  749  g add history_raw_160123 
  750  g commit -m "Added history_raw_160123 file"
  751  gst
  752  g add config/
  753  gst
  754  g commit -m "Added config folder with nvim configuration"
  755  gst
  756  g lg
  757  echo $TMUX
  758  echo $TERM
  759  echo $TERM
  760  echo $TMUX
  761  tmux
  762  echo $TMUX
  763  tmux
  764  vim ~/.bashrc
  765  tmux
  766  tmux
  767  tmus
  768  tmux
  769  vim ~/.bashrc
  770  nano ~/.bashrc
  771  vim ~/.bashrc
  772  tmux
  773  lt ~/Documents/dotfiles/
  774  cp .bashrc ~/Documents/dotfiles/bashrc
  775  cp .bash_aliases ~/Documents/dotfiles/bash_aliases
  776  lt ~/Documents/dotfiles/
  777  ls ~/Downloads/
  778  lt ~/Downloads/dotfiles/
  779  cd ~/Downloads/
  780  ll
  781  rm *.zip
  782  rm *.deb
  783  rm *.gz
  784  ll
  785  cd ..
  786  ll
  787  lt alacritty/
  788  rm -rf alacritty/
  789  ll
  790  cd ******/
  791  ll
  792  cd *****************-0-20-16-pc/
  793  ll
  794  . *****************.sh
  795  cd ******/*****************-0-20-16-pc/
  796  vim *****************.sh 
  797  ll
  798  ll ~/
  799  ll
  800  python *****************.py 
  801  . *****************.sh 
  802  cd ~/******/*****************-0-20-16-pc/
  803  vim *****************.py 
  804  vim *****************.sh
  805  sudo ./*****************.sh 
  806  source /opt/ros/galactic/setup.bash
  807  ros2 topic list 
  808  ros2 topic info /chatter 
  809  source /opt/ros/galactic/setup.bash
  810  tnux
  811  tmux
  812  ros2 run demo_nodes_cpp talker
  813  echo "Installing ROS2 Humble... Just for fun..."
  814  locale
  815  sudo apt-get update -y
  816  sudo apt update -y
  817  sudo apt upgrade -y
  818  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
  819  locale
  820  sudo locale-gen en_US en_US.UTF-8
  821  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
  822  locale
  823  sudo apt install software-properties-common
  824  sudo add-apt-repository universe
  825  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
  826  sudo apt update -y
  827  sudo apt upgrade -y
  828  echo "Installing ROS2 Galactic... It's not possible intsall Humble due OS requirements..."
  829  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
  830  ll /usr/share/keyrings/
  831  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
  832  echo $UBUNTU_CODENAME
  833  sudo apt update -y
  834  sudo apt upgrade -y
  835  sudo apt install ros-galactic-desktop
  836  sudo apt install ros-dev-tools
  837  source /opt/ros/galactic/setup.bash
  838  ros2 run demo_nodes_py listener
  839  echo "Installing ROS2 Galactic... Done!"
  840  printenv | grep -i ROS
  841  vim ~/.config/rosmgmt/ros2_galactic_conf.bash 
  842  echo "Installing ROS2 Galactic... Config... Ok!"
  843  history >> ~/Documents/dotfiles/history_raw_200123 
  844  cd ~/******/*****************-0-20-16-pc/
  845  sudo ./*****************.sh 
  846  tail .bash_history -n10
  847  tail .bash_history -n20
  848  vim .bash_history
  849  tail .bash_history -n20
  850  history | tail -10
  851  vim .bash_history
  852  cd ~/******/*****************-0-20-16-pc/
  853  sudo ./*****************.sh 
  854  sudo apt-get update -y
  855  sudo apt update -y
  856  sudo apt upgrade -y
  857  sudo apt autoremove
  858  pyenv shell 3.11.1
  859  vim ~/.config/alacritty/alacritty.yml 
  860  exit
  861  echo "Installing VsCode from 'https://code.visualstudio.com/download'"
  862  history | grep .deb
  863  sudo apt install ./Downloads/code_1.75.0-1675266613_amd64.deb 
  864  cd dev/
  865  ll
  866  cd python/
  867  ll
  868  code .
  869  echo "Installing VsCode from 'https://code.visualstudio.com/download'... Done!"
  870  echo "Installing configuring and adding plugins to vscode... "
  871  code .
  872  cd opencv_t1/
  873  code .
  874  source /home/frivas/dev/python/opencv_t1/.venv/bin/activate
  875  g init code
  876  g init
  877  echo "#OpenCV T1 Readme file" >> Readme.md
  878  echo ".venv/" >> .gitignore
  879  echo ".vscode/" >> .gitignore
  880  g add Readme.md .gitignore 
  881  g commit -m "Initial commit" 
  882  gst
  883  g add .
  884  g commit -m "Added testcv291.py"
  885  gst
  886  echo "Installing configuring and adding plugins to vscode... Done!"
  887  source /home/frivas/dev/python/openai_t1/.venv/bin/activate
  888  ***********************************************
  889  ***********************************************_KEY
  890  ***********************************************
  891  ***********************************************_KEY
  892  echo $OPENAI_APY_KEY
  893  source /home/frivas/dev/python/openai_t1/.venv/bin/activate
  894  pip -V
  895  pip install openai
  896  source /home/frivas/dev/python/openai_t1/.venv/bin/activate
  897  echo $OPENAI_APY_KEY
  898  export OPENAI_API_KEY='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'
  899  ***********************************************_KEY
  900  cd dev/python/
  901  ll
  902  rm -rf .vscode/
  903  ll
  904  mkdir openai_t1
  905  cd open
  906  cd openai_t1/
  907  history | grep venv
  908  pyenv versions
  909  history | grep pyenv
  910  pyenv local 3.10.9
  911  python -m venv .venv
  912  ll
  913  rm .python-version 
  914  startvenv 
  915  deactivate
  916  ll
  917  code .
  918  history | tail -10
  919  lt ~/Documents/dotfiles/
  920  history > ~/Documents/dotfiles/history_raw_040223
  921  lt ~/Documents/dotfiles/
  922  cp .bashrc ~/Documents/dotfiles/bashrc 
  923  cp .bash_aliases ~/Documents/dotfiles/bash_aliases 
  924  cp ~/.config/nvim/init.lua ~/Documents/dotfiles/config/nvim/init.lua 
  925  lt ~/.config/
  926  cp -a ~/.config/lsd/. ~/Documents/dotfiles/config/
  927  lt ~/Documents/dotfiles/
  928  cp -a ~/.config/lsd/. ~/Documents/dotfiles/config/lsd
  929  cp -a ~/.config/rosmgmt/. ~/Documents/dotfiles/config/rosmgmt/
  930  cp -a ~/.config/gitbash/. ~/Documents/dotfiles/config/gitbash/
  931  cp -a ~/.config/utilities/. ~/Documents/dotfiles/config/utilities/
  932  lt ~/.config/
  933  lt -n1 ~/.config/
  934  lt -1 ~/.config/
  935  lt -n1 ~/.config/
  936  lsd --help
  937  lt -l ~/.config/
  938  lsd --help
  939  lt -d --depth 1 ~/.config/
  940  lt --depth 1 ~/.config/
  941  lt -d ~/.config/
  942  cp -a ~/.config/alacritty/. ~/Documents/dotfiles/config/alacritty/
  943  history > ~/Documents/dotfiles/history_raw_040223
  944  ll
  945  lt dev
  946  ros2 run demo_nodes_py listener
  947  ros2 run demo_nodes_py talker
  948  history | grep ros
  949  source /opt/ros/galactic/setup.bash
  950  ls
  951  ls -l
  952  lt dev/
  953  mkdir ros2dev
  954  cd ros2dev
  955  tmux
  956  source /opt/ros/galactic/setup.bash
  957  cd printenv | grep -i ROS
  958  printenv | grep -i ROS
  959  echo $ROS_DOMAIN_ID
  960  export ROS_DOMAIN_ID=0
  961  echo $ROS_DOMAIN_ID
  962  rqt
  963  rqt &
  964  echo "Installing turtlebot3 from 'https://emanual.robotis.com/docs/en/platform/turtlebot3/quick-start/'"
  965  mkdir -p ~/ros2dev/turtlebot3_ws/src
  966  cd ~/ros2dev/turtlebot3_ws/src
  967  git clone -b galactic-devel https://github.com/ROBOTIS-GIT/DynamixelSDK.git
  968  git clone -b galactic-devel https://github.com/ROBOTIS-GIT/turtlebot3_msgs.git
  969  git clone -b galactic-devel https://github.com/ROBOTIS-GIT/turtlebot3.git
  970  cd ..
  971  colcon build --symlink-install
  972  source ~/turtlebot3_ws/install/setup.bash
  973  source ~/ros2dev/turtlebot3_ws/install/setup.bash
  974  export ROS_DOMAIN_ID=30
  975  echo $ROS_DOMAIN_ID=30
  976  echo "Installing turtlebot3 from 'https://emanual.robotis.com/docs/en/platform/turtlebot3/quick-start/'... Done!"
  977  echo $ROS_DOMAIN_ID
  978  vim ~/.config/rosmgmt/ros2_galactic_conf.bash 
  979  sudo apt -h
  980  sudo apt list ros-galactic-*
  981  sudo apt list ros-galactic-acrt*
  982  sudo apt list ros-galactic-* | grep cartographer
  983  sudo apt list ros-galactic-* | grep navigation
  984  sudo apt list ros-galactic-*
  985  ros2 list
  986  ros2 -h
  987  source /opt/ros/galactic/setup.bash
  988  ros2 list
  989  ros2 -h
  990  ros2 pkg -h
  991  ros2 pkg list
  992  sudo apt list ros-galactic-* | grep turtlebot
  993  sudo apt -h
  994  apt list --installed  ros-galactic-* | grep turtlebot
  995  apt list --installed ros-galactic-*
  996  apt list --installed ros-galactic-* | grep carto
  997  apt list --installed ros-galactic-* | grep navigation
  998  apt list --installed ros-galactic-gazebo-* | grep navigation
  999  apt list ros-galactic-gazebo-* | grep navigation
 1000  sudo apt list ros-galactic-gazebo-* | grep navigation
 1001  sudo ap-gett list ros-galactic-gazebo-* | grep navigation
 1002  sudo apt-get list ros-galactic-gazebo-* | grep navigation
 1003  vim ~/.config/rosmgmt/ros_mgmt.sh 
 1004  apt list --installed ros-galactic-gazebo-* | grep navigation
 1005  sudo apt install ros-gazebo-cartographer
 1006  sudo apt install ros-galactic-cartographer
 1007  sudo apt install ros-galactic-cartographer-ros
 1008  sudo apt install ros-galactic-navigation2
 1009  sudo apt install ros-galactic-nav2-bringup
 1010  source /opt/ros/galactic/setup.bash
 1011  tmux
 1012  sudo apt-get update -y
 1013  sudo apt update -y
 1014  sudo apt autoremove -y
 1015  vim
 1016  cd ~/.config/nvim/
 1017  ll
 1018  vim init.lua 
 1019  sudo apt-get update -y 
 1020  sudo apt update -y 
 1021  sudo apt upgrade -y 
 1022  code
 1023  sudo apt-get -y update
 1024  sudo apt -y update
 1025  sudo apt -y upgrade
 1026  sudo apt-get update -y
 1027  sudo apt update -y
 1028  sudo apt upgrade -y
 1029  lt ~/Downloads/dotfiles/
 1030  ll
 1031  cd dev/python/
 1032  ll
 1033  mkdir ChatGPT_voice_assistant
 1034  cd ChatGPT_voice_assistant/
 1035  pyenv version
 1036  pyenv versions
 1037  pyenv local 3.10.9
 1038  python -V
 1039  initvenv 
 1040  ll
 1041  rm .python-version 
 1042  python -V
 1043  source .venv/bin/activate
 1044  python -V
 1045  deactivate
 1046  code .
 1047  source /home/frivas/dev/python/ChatGPT_voice_assistant/.venv/bin/activate
 1048  pip list 
 1049  pip install --upgrade pip
 1050  pip intstall pyttsx3
 1051  pip insttall pyttsx3
 1052  pip install pyttsx3
 1053  python text-to-speech-test.py 
 1054  sudo apt install espeak
 1055  pip install pyaudio
 1056  sudo apt install python3-pyaudio
 1057  pip install pyaudio
 1058  brew
 1059  sudo apt -y install portaudio19-dev
 1060  pip install pyaudio
 1061  python text-to-speech-test.py 
 1062  source /home/frivas/dev/python/ChatGPT_voice_assistant/.venv/bin/activate
 1063  pip install gtts
 1064  python gtts-text-to-speech-test.py 
 1065  pip install playsound
 1066  python gtts-text-to-speech-test.py 
 1067  pip install pygobject
 1068  sudo apt install libgirepository1.0-dev'
 1069  sudo apt install libgirepository1.0-dev
 1070  pip install pygobject
 1071  python gtts-text-to-speech-test.py 
 1072  pip install openai speech_recognition
 1073  pip install openai
 1074  pip install SpeechRecognition
 1075  python Voice-GPT3.py 
 1076  cd dev/python/
 1077  cd ChatGPT_voice_assistant/
 1078  code .
 1079  sudo apt install mpv
 1080  cd dev/python/
 1081  cd ChatGPT_voice_assistant/
 1082  code .
 1083  ll ~/Documents/dotfiles/
 1084  history >> ~/Documents/dotfiles/history_raw_130323
 1085  ll ~/Documents/dotfiles/
 1086  lt ~/.config/nvim/
 1087  cp ~/.config/nvim/init.lua ~/Documents/dotfiles/config/nvim/
 1088  lt ~/Documents/dotfiles/config/nvim/
 1089  lt ~/Documents/dotfiles/config/
 1090  lt ~/Documents/dotfiles/
 1091  touch .gitignore
 1092  gst
 1093  g init
 1094  g branch -M main
 1095  gst
 1096  ll
 1097  rm -rf .git
 1098  ll
 1099  mv .gitignore ~/Documents/dotfiles/
 1100  cd ~/Documents/dotfiles/
 1101  ls
 1102  gst
 1103  g lg
 1104  cd
 1105  ll
 1106  vim .gitconfig 
 1107  gst
 1108  cd ~/Documents/dotfiles/
 1109  gst
 1110  g branch -M main
 1111  git remote add origin https://github.com/rivascf/dotfiles-temp.git
 1112  g push -u origin main
 1113  gst
 1114  g add .
 1115  g commit "Updated dotfiles (batch)"
 1116  g commit -m "Updated dotfiles (batch)"
 1117  g push -u origin main
 1118  gst
 1119  g lg2
 1120  vim ~/Documents/dotfiles/
 1121  gst
 1122  cd ~/Documents/dotfiles/
 1123  gst
 1124  gg config --local -e
 1125  g config --local -e
 1126  vim ~/.gitconfig 
 1127  g config --local -e
 1128  ll
 1129  cat history_raw_040223
 1130  ll
 1131  cat history_raw_040223 | grep 'OPENAI' ; echo $?
 1132  cat history_raw_130323 | grep 'OPENAI' ; echo $?
 1133  cat history_raw_160123 | grep 'OPENAI' ; echo $?
 1134  cat history_raw_200123 | grep 'OPENAI' ; echo $?
 1135  cat history_raw_240123 | grep 'OPENAI' ; echo $?
 1136  history > history_raw_130323 
 1137  cat history_raw_130323 | grep 'OPENAI' ; echo $?
 1138  vim history_raw_130323 
 1139  gst
 1140  g add .
 1141  g commit -m "Updated history files"
 1142  gst
 1143  g push -u origin main
 1144  vim ~/Documents/dotfiles/bashrc 
 1145  vim .bashrc
 1146  sudo apt-get update -y
 1147  sudo apt update -y
 1148  sudo apt upgrade -y
 1149  sudo apt autoremove -y
 1150  cd dev
 1151  ll
 1152  cd python/
 1153  ll
 1154  lt 
 1155  cd ~/.config/nvim/
 1156  vim init.lua 
 1157  cd
 1158  cp ~/.config/nvim/init.lua ~/Documents/dotfiles/config/nvim/
 1159  cd ~/Documents/dotfiles/config/nvim/
 1160  cd ..
 1161  gst
 1162  g add .
 1163  g commit -m "Updated nvim init.lua"
 1164  g push -u origin main
 1165  cd
 1166  ls
 1167  ll
 1168  lt ~/Documents/dotfiles/ -1
 1169  lt -s ~/Documents/dotfiles/ -1
 1170  lt -l ~/Documents/dotfiles/ -1
 1171  ls
 1172  ll
 1173  lt -l ~/Documents/dotfiles/ -1
 1174  cp .gitconfig ~/Documents/dotfiles/gitconfig
 1175  tmux
 1176  cp .bashrc ~/Documents/dotfiles/bashrc 
 1177  cd ~/Documents/dotfiles/bashrc 
 1178  cd ~/Documents/dotfiles/
 1179  gst
 1180  g add bashrc
 1181  g commit -m "Updated bashrc file"
 1182  gst
 1183  g add .
 1184  g commit -m "Added gitconfig file"
 1185  g push -u origin main
 1186  cd dev
 1187  ll
 1188  cd python
 1189  ll
 1190  lt
 1191  vim opencv_t1/Readme.md 
 1192  rm opencv_t1/Readme.md 
 1193  lt -a
 1194  lt
 1195  git init
 1196  echo "# Dev - Python Examples" >> Readme.md
 1197  touch .gitignore
 1198  gst
 1199  g add Readme.md .gitignore 
 1200  g commit -m "Initial commit"
 1201  g branch -M main
 1202  git remote add origin https://github.com/rivascf/devpy-tmp.git
 1203  g push -u origin main
 1204  gst
 1205  lt -a -1 openai_t1/
 1206  ll openai_t1/
 1207  vim .gitignore 
 1208  gst
 1209  g add .gitignore 
 1210  g commit -m "gitignore exclusions added"
 1211  gst
 1212  g add openai_t1/
 1213  gst
 1214  g status
 1215  g restore --staged .
 1216  g status
 1217  lt
 1218  vim opencv_t1/testcv201.py 
 1219  vim openai_t1/test_api_key.py 
 1220  vim ChatGPT_voice_assistant/pyttsx3-text-to-speech-test.py 
 1221  vim ChatGPT_voice_assistant/gtts-text-to-speech-test.py 
 1222  vim ChatGPT_voice_assistant/Voice-GPT3.py 
 1223  cd ChatGPT_voice_assistant/
 1224  initvenv 
 1225  source .venv/bin/activate
 1226  vim Voice-GPT3.py 
 1227  cd ..
 1228  cd python/
 1229  gst
 1230  deactivate 
 1231  gst
 1232  g add opencv_t1/
 1233  cd opencv_t1/
 1234  ll
 1235  rm .git 
 1236  rm -rf .git 
 1237  rm .gitignore 
 1238  ll
 1239  cd 
 1240  g add opencv_t1/
 1241  cd dev/python/
 1242  g add opencv_t1/
 1243  gst
 1244  g commit -m "Added opencv example folder"
 1245  g add openai_t1/
 1246  vim openai_t1/test_api_key.py 
 1247  g commit -m "Added openai example folder"
 1248  gst
 1249  g add .
 1250  g commit -m "Added ChatGPT voice assistant folder"
 1251  gst
 1252  g push -u origin main
 1253  vim  .gitignore 
 1254  gst
 1255  git update-index --assume-unchanged
 1256  git update-index --skip-worktree ChatGPT_voice_assistant/
 1257  gst
 1258  g add .
 1259  g commit -m "gitignore exclusions updated"
 1260  g lg
 1261  g push -u origin main
 1262  cd .. 
 1263  mkdir dltme
 1264  mv python/ChatGPT_voice_assistant/*.mp3 ./dltme/
 1265  mv python/ChatGPT_voice_assistant/*.wav ./dltme/
 1266  lt dltme/
 1267  cd python/
 1268  gst
 1269  g commit -m "Deleted media files"
 1270  g push -u origin main
 1271  git update-index -h
 1272  git update-index -q
 1273  gst
 1274  g add .
 1275  gst
 1276  g commit -m "Deleted media files"
 1277  g push -u origin main
 1278  mv ../dltme/* ./ChatGPT_voice_assistant/media/
 1279  mkdir ./ChatGPT_voice_assistant/media
 1280  mv ../dltme/* ./ChatGPT_voice_assistant/media/
 1281  lt ChatGPT_voice_assistant/
 1282  gst
 1283  g config --local -e
 1284  g config --global -e
 1285  gst
 1286  sudo apt-get update -y && sudo apt update -y
 1287  sudo apt upgrade -y
 1288  history | grep summer
 1289  vim 
 1290  code
 1291  history
 1292  cd ~/Downloads/
 1293  ll
 1294  sudo cp alacritty_alt_icon_64x64.svg /usr/share/pixmaps/Alacritty.svg 
 1295  sudo apt-get update -y && sudo apt update -y
 1296  sudo apt upgrade -y
 1297  sudo apt autoremove -y
 1298  cd /usr/share/
 1299  ll
 1300  cd applications/
 1301  ll
 1302  ls | grep alacritty
 1303  ls | grep Alacritty
 1304  cd
 1305  cd ~/Downloads/
 1306  ll
 1307  cd ..
 1308  ls
 1309  cd ~/Documents/
 1310  ll
 1311  cd 
 1312  history
 1313  vim
 1314  vim ~/Documents/dotfiles/history_raw_040223 
 1315  cd Downloads/
 1316  g clone https://github.com/alacritty/alacritty.git
 1317  sudo apt-get update -y && sudo apt update -y
 1318  sudo apt upgrade -y
 1319  sudo apt-get update -y && sudo apt update -y
 1320  ll
 1321  sudo apt-get update -y && sudo apt update -y
 1322  sudo apt upgrade -y
 1323  sudo apt-get update -y && sudo apt update -y
 1324  sudo apt upgrade -y
 1325  apt search foxglove-studio-*.deb
 1326  apt search foxglove-studio-
 1327  apt search .\foxglove-studio-
 1328  apt search foxglove-studio
 1329  apt search foxglove
 1330  echo "Installing foxglobe-studio from 'https://foxglove.dev/download'"
 1331  cd ~/Downloads/
 1332  sudo apt install ./foxglove-studio-1.54.0-linux-amd64.deb 
 1333  foxglove-studio 
 1334  source ~/.config/rosmgmt/ros2_humble_conf.bash 
 1335  ls /opt/ros/
 1336  exit
 1337  vim ~/.config/nvim/init.lua 
 1338  cd ~/Documents/
 1339  ll
 1340  cd dotfiles/
 1341  g pull origin main
 1342  lt
 1343  mkdir -p ./extras/icons/
 1344  lt ~/Downloads/*.svg
 1345  cp ~/Downloads/*.svg ./extras/icons/
 1346  lt
 1347  gst 
 1348  g add .
 1349  g status
 1350  git restore -- staged extras/
 1351  git restore --staged extras/
 1352  gst
 1353  g add .
 1354  g commit -m "Added 'extras/icons' folders with Alacritty extra icons."
 1355  gst
 1356  history >> ./galaxy-vm-history-raw-260523
